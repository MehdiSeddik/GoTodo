basePath: /api
definitions:
  models.Todo:
    properties:
      description:
        example: This is my first todo
        type: string
      id:
        example: 1
        type: integer
      isDone:
        default: false
        example: false
        type: boolean
      title:
        example: My first todo
        type: string
    required:
    - description
    - title
    type: object
  models.TodoPostBody:
    properties:
      description:
        example: This is my first todo
        type: string
      isDone:
        default: false
        example: false
        type: boolean
      title:
        example: My first todo
        type: string
    required:
    - description
    - title
    type: object
  models.todoResponse:
    properties:
      message:
        example: Todo created successfully
        type: string
      todo:
        $ref: '#/definitions/models.Todo'
    type: object
info:
  contact:
    email: support@swagger.io
  description: API documentation for interacting with the TODO backend
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: TODO API documentation
  version: "1.0"
paths:
  /todos/{id}:
    get:
      description: Return a todo object in json
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: get a todo by id
      tags:
      - CRUD TODOS
    put:
      consumes:
      - application/json
      description: Edit a todo object
      parameters:
      - description: Todo object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.TodoPostBody'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.todoResponse'
      summary: edit a todo
      tags:
      - CRUD TODOS
  /todos/all:
    get:
      description: Return an array of todos objects in json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: get all available todos
      tags:
      - CRUD TODOS
  /todos/new:
    post:
      consumes:
      - application/json
      description: Create a new todo object
      parameters:
      - description: Todo object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.TodoPostBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.todoResponse'
      summary: create a new todo
      tags:
      - CRUD TODOS
schemes:
- http
swagger: "2.0"
